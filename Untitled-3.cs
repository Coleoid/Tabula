//  This file was generated by TabulaClassGenerator version 0.4.
//  To change this file, change the Tabula scenario at path\person_search_duty_locations.tab.
//  Version 0.4 is not yet alpha (known missing 1.0 features).  You have been warned.
using System;
using System.Collections.Generic;
using Acadis.Constants.Accounting;
using Acadis.Constants.Admin;
using Acadis.SystemUtilities;
using Tabula.API;

namespace Tabula
{
    //  "Advanced person search with duty assignments"
    public class person_search_duty_locations_generated
        : GeneratedScenarioBase, IGeneratedScenario
    {
        public void ExecuteScenario()
        {
            paragraph__006_to_007();
            Foreach_Row_in( table__011_to_015, paragraph__010_to_010 );
            Foreach_Row_in( table__019_to_022, paragraph__018_to_018 );
            Foreach_Row_in( table__028_to_032, paragraph__026_to_027 );
            Foreach_Row_in( table__037_to_040, paragraph__035_to_036 );
            Foreach_Row_in( table__046_to_055, paragraph__043_to_045 );
            Foreach_Row_in( table__062_to_066, paragraph__058_to_061 );
            paragraph__068_to_080();
            Foreach_Row_in( table__084_to_086, paragraph__083_to_083 );
            Foreach_Row_in( table__089_to_091, paragraph__088_to_088 );
            Foreach_Row_in( table__094_to_096, paragraph__093_to_093 );
            Foreach_Row_in( table__105_to_108, paragraph__100_to_104 );
            paragraph__111_to_117();
            Foreach_Row_in( table__146_to_149, paragraph__121_to_143 );
            Foreach_Row_in( table__152_to_156, paragraph__121_to_143 );
            Foreach_Row_in( table__159_to_165, paragraph__121_to_143 );
            Foreach_Row_in( table__168_to_171, paragraph__121_to_143 );
            Foreach_Row_in( table__174_to_176, paragraph__121_to_143 );
        }

        public void paragraph__006_to_007()
        {
            var GlobalSettingManagement = new ScenarioContext.Implementations.GlobalSettingManagement();

            Label(     "Enable duty locations");
            Do(() =>    GlobalSettingManagement.Enable_Duty_Locations(), @"path\person_search_duty_locations.tab:7", @"GlobalSettingManagement.Enable_Duty_Locations()");
        }

        public void paragraph__010_to_010()
        {
            Label(     "What we'll call our people in this scenario");
            Do(() =>    Var[Var["handle"]] = Var["fullnamelf"], @"path\person_search_duty_locations.tab:10", @"Var[Var[""handle""]] = Var[""fullnamelf""]");
        }

        public Table table__011_to_015()
        {
            return new Table {
                Label = "table__011_to_015",
                Header = new List<string>     { "handle", "FullNameLF" },
                Data = new List<List<string>> {
                    new List<string>          { "Lina", "Frixell, Rorolina" },
                    new List<string>          { "Gio", "Arland, Giovanni" },
                    new List<string>          { "Sterky", "Cranach, Sterkenberg" },
                    new List<string>          { "Mimi", "Schwarzlang, Mimi" },
                }
            };
        }

        public void paragraph__018_to_018()
        {
            Label(     "What we'll call the organizations they work for");
            Do(() =>    Var[Var["TLA"]] = Var["organizationname"], @"path\person_search_duty_locations.tab:18", @"Var[Var[""TLA""]] = Var[""organizationname""]");
        }

        public Table table__019_to_022()
        {
            return new Table {
                Label = "table__019_to_022",
                Header = new List<string>     { "TLA", "OrganizationName" },
                Data = new List<List<string>> {
                    new List<string>          { "HPD", "Hometown Police Department" },
                    new List<string>          { "OPD", "Otherville Police Department" },
                    new List<string>          { "OA", "Otherville Academy" },
                }
            };
        }

        public void paragraph__026_to_027()
        {
            var UserCreation = new ScenarioContext.UserCreation();

            Label(     "Create our people");
            Do(() =>    UserCreation.Create_Person_named__(Var["name"]), @"path\person_search_duty_locations.tab:27", @"UserCreation.Create_Person_named__(Var[""name""])");
        }

        public Table table__028_to_032()
        {
            return new Table {
                Label = "table__028_to_032",
                Header = new List<string>     { "name" },
                Data = new List<List<string>> {
                    new List<string>          { "#lina" },
                    new List<string>          { "#gio" },
                    new List<string>          { "#sterky" },
                    new List<string>          { "#mimi" },
                }
            };
        }

        public void paragraph__035_to_036()
        {
            var OrganizationFNHManagement = new ScenarioContext.Implementations.Organizations.OrganizationFNHManagement();

            Label(     "Create our organizations");
            Do(() =>    OrganizationFNHManagement.Create_organization_named__of_type__under_base_parent_group(Var["orgname"], "organization"), @"path\person_search_duty_locations.tab:36", @"OrganizationFNHManagement.Create_organization_named__of_type__under_base_parent_group(Var[""orgname""], ""organization"")");
        }

        public Table table__037_to_040()
        {
            return new Table {
                Label = "table__037_to_040",
                Header = new List<string>     { "orgName" },
                Data = new List<List<string>> {
                    new List<string>          { "#hpd" },
                    new List<string>          { "#opd" },
                    new List<string>          { "#oa" },
                }
            };
        }

        public void paragraph__043_to_045()
        {
            var ListManagement = new ScenarioContext.Implementations.Administration.ListManagement();

            Label(     "Create list items");
            Do(() =>    ListManagement.Create__list_item__with_description__with_usage__($"{Var["itemType"]}", $"Tabula {Var["item"]}", $"Tabula {Var["item"]} description", "Available for new records"), @"path\person_search_duty_locations.tab:45", @"ListManagement.Create__list_item__with_description__with_usage__($""{Var[""itemType""]}"", $""Tabula {Var[""item""]}"", $""Tabula {Var[""item""]} description"", ""Available for new records"")");
        }

        public Table table__046_to_055()
        {
            return new Table {
                Label = "table__046_to_055",
                Header = new List<string>     { "itemType", "item" },
                Data = new List<List<string>> {
                    new List<string>          { "EmploymentAction", "Update" },
                    new List<string>          { "EmploymentType", "Civilian" },
                    new List<string>          { "EmploymentType", "Employee" },
                    new List<string>          { "AppointmentType", "Reserve" },
                    new List<string>          { "AppointmentType", "Part Time" },
                    new List<string>          { "AppointmentType", "Full Time" },
                    new List<string>          { "TitleRank", "Chief" },
                    new List<string>          { "TitleRank", "Instructor" },
                    new List<string>          { "TitleRank", "Lackey" },
                }
            };
        }

        public void paragraph__058_to_061()
        {
            var EmploymentActionEdit = new ScenarioContext.ViewImplementations.People.EmploymentActionEdit();

            Label(     "Add employments");
            Do(() =>    EmploymentActionEdit.Browse_to_add_person_employment_for__(Var["empname"]), @"path\person_search_duty_locations.tab:60", @"EmploymentActionEdit.Browse_to_add_person_employment_for__(Var[""empname""])");
            Do(() =>    EmploymentActionEdit.Add_primary_employment_at__with_title__employment_type__and_appointment_type__starting_on__(Var["orgname"], $"Tabula {Var["empTitle"]}", $"Tabula {Var["empType"]}", $"Tabula {Var["apptType"]}", Var["startdate"].To<DateTime>()), @"path\person_search_duty_locations.tab:61", @"EmploymentActionEdit.Add_primary_employment_at__with_title__employment_type__and_appointment_type__starting_on__(Var[""orgname""], $""Tabula {Var[""empTitle""]}"", $""Tabula {Var[""empType""]}"", $""Tabula {Var[""apptType""]}"", Var[""startdate""].To<DateTime>())");
        }

        public Table table__062_to_066()
        {
            return new Table {
                Label = "table__062_to_066",
                Header = new List<string>     { "empName", "orgName", "empTitle", "empType", "apptType", "startDate" },
                Data = new List<List<string>> {
                    new List<string>          { "#lina", "#hpd", "Lackey", "Civilian", "Contract", "8/15/2008" },
                    new List<string>          { "#gio", "#hpd", "Lackey", "Civilian", "Contract", "8/15/2008" },
                    new List<string>          { "#sterky", "#opd", "Lackey", "Civilian", "Contract", "8/15/2008" },
                    new List<string>          { "#mimi", "#oa", "Instructor", "Reserve", "Part Time", "8/15/2012" },
                }
            };
        }

        public void paragraph__068_to_080()
        {
            Label(     "paragraph__068_to_080");
            Alias(     "Add employment actions for #employeeName at #orgName", Tabula.CST.Block ); //TODO: Actually implement
        }

        public void paragraph__083_to_083()
        {
            Label(     "Add employment actions");
            Unfound(  @"Add employment actions for #lina at #hpd", @"path\person_search_duty_locations.tab:83");
        }

        public Table table__084_to_086()
        {
            return new Table {
                Label = "table__084_to_086",
                Header = new List<string>     { "actionName", "empType", "apptType", "empTitle", "newStatus", "effectiveDate" },
                Data = new List<List<string>> {
                    new List<string>          { "Tabula Update", "Employee", "Part Time", "Instructor", "On Leave (Active)", "10/15/2008" },
                    new List<string>          { "Separation", "Reserve", "Full Time", "Chief", "Separated (Inactive)", "12/15/2008" },
                }
            };
        }

        public void paragraph__088_to_088()
        {
            Label(     "paragraph__088_to_088");
            Unfound(  @"Add employment actions for #gio at #hpd", @"path\person_search_duty_locations.tab:88");
        }

        public Table table__089_to_091()
        {
            return new Table {
                Label = "table__089_to_091",
                Header = new List<string>     { "actionName", "empType", "apptType", "empTitle", "newStatus", "effectiveDate" },
                Data = new List<List<string>> {
                    new List<string>          { "Tabula Update", "Reserve", "Full Time", "Chief", "Active (Active)", "10/15/2008" },
                    new List<string>          { "Tabula Update", "Reserve", "Full Time", "Chief", "On Leave (Active)", "12/15/2008" },
                }
            };
        }

        public void paragraph__093_to_093()
        {
            Label(     "paragraph__093_to_093");
            Unfound(  @"Add employment actions for #sterky at #opd", @"path\person_search_duty_locations.tab:93");
        }

        public Table table__094_to_096()
        {
            return new Table {
                Label = "table__094_to_096",
                Header = new List<string>     { "actionName", "empType", "apptType", "empTitle", "newStatus", "effectiveDate", "comment" },
                Data = new List<List<string>> {
                    new List<string>          { "Tabula Update", "Employee", "Part Time", "Instructor", "On Leave (Active)", "10/15/2008", "Tabula Comment" },
                    new List<string>          { "Separation", "Civiilan", "Contract", "Lackey", "Separated (Inactive)", "12/15/2008", "" },
                }
            };
        }

        public void paragraph__100_to_104()
        {
            var PersonEmploymentFNHManagement = new ScenarioContext.People.PersonEmploymentFNHManagement();

            Label(     "Add a comment and duty assignment");
            Do(() =>    PersonEmploymentFNHManagement.Add_employment_comment__for__at__("Tabula comment", Var["empname"], Var["orgname"]), @"path\person_search_duty_locations.tab:102", @"PersonEmploymentFNHManagement.Add_employment_comment__for__at__(""Tabula comment"", Var[""empname""], Var[""orgname""])");
            Do(() =>    PersonEmploymentFNHManagement.Using_employment_of__at__(Var["empname"], Var["orgname"]), @"path\person_search_duty_locations.tab:103", @"PersonEmploymentFNHManagement.Using_employment_of__at__(Var[""empname""], Var[""orgname""])");
            Do(() =>    PersonEmploymentFNHManagement.Add_duty_assignment_at__starting__with_status__(Var["orgname"], Var["startdate"].To<DateTime>(), "Current".To<ScenarioContext.People.AssignmentStatus>()), @"path\person_search_duty_locations.tab:104", @"PersonEmploymentFNHManagement.Add_duty_assignment_at__starting__with_status__(Var[""orgname""], Var[""startdate""].To<DateTime>(), ""Current"".To<ScenarioContext.People.AssignmentStatus>())");
        }

        public Table table__105_to_108()
        {
            return new Table {
                Label = "table__105_to_108",
                Header = new List<string>     { "empName", "orgName", "startDate" },
                Data = new List<List<string>> {
                    new List<string>          { "#lina", "#hpd", "8/15/2008" },
                    new List<string>          { "#sterky", "#opd", "8/15/2008" },
                    new List<string>          { "#mimi", "#oa", "8/15/2012" },
                }
            };
        }

        public void paragraph__111_to_117()
        {
            var PersonEmploymentFNHManagement = new ScenarioContext.People.PersonEmploymentFNHManagement();

            Label(     "Add temporary duty assignments");
            Do(() =>    PersonEmploymentFNHManagement.Using_employment_of__at__(Var["lina"], Var["hpd"]), @"path\person_search_duty_locations.tab:112", @"PersonEmploymentFNHManagement.Using_employment_of__at__(Var[""lina""], Var[""hpd""])");
            Do(() =>    PersonEmploymentFNHManagement.Add_temporary_duty_assignment_at__from__to__with_status__(Var["opd"], "1/1/2013".To<DateTime>(), "4/1/2013".To<DateTime>(), "Past"), @"path\person_search_duty_locations.tab:113", @"PersonEmploymentFNHManagement.Add_temporary_duty_assignment_at__from__to__with_status__(Var[""opd""], ""1/1/2013"".To<DateTime>(), ""4/1/2013"".To<DateTime>(), ""Past"")");
            Do(() =>    PersonEmploymentFNHManagement.Using_employment_of__at__(Var["sterky"], Var["opd"]), @"path\person_search_duty_locations.tab:115", @"PersonEmploymentFNHManagement.Using_employment_of__at__(Var[""sterky""], Var[""opd""])");
            Do(() =>    PersonEmploymentFNHManagement.Add_temporary_duty_assignment_at__from__to__with_status__(Var["hpd"], "1/1/2013".To<DateTime>(), "4/1/2013".To<DateTime>(), "Past"), @"path\person_search_duty_locations.tab:116", @"PersonEmploymentFNHManagement.Add_temporary_duty_assignment_at__from__to__with_status__(Var[""hpd""], ""1/1/2013"".To<DateTime>(), ""4/1/2013"".To<DateTime>(), ""Past"")");
            Unfound(  @"Add temporary duty assignment at #oa with status ""Past""", @"path\person_search_duty_locations.tab:117");
        }

        public void paragraph__121_to_143()
        {
            var PersonSearch = new ScenarioContext.PresenterImplementations.People.PersonSearchWorkflow();
            var PersonSearchCriteria = new ScenarioContext.PresenterImplementations.People.PersonSearchCriteriaWorkflow();

            Label(     "Search people with many different duty assignment criteria");
            Do(() =>    PersonSearchCriteria.Browse_to_page(), @"path\person_search_duty_locations.tab:124", @"PersonSearchCriteria.Browse_to_page()");
            Do(() =>    PersonSearchCriteria.Click_Switch_to_advanced_mode(), @"path\person_search_duty_locations.tab:125", @"PersonSearchCriteria.Click_Switch_to_advanced_mode()");
            Do(() =>    PersonSearchCriteria.Add_new_employment_criterion_to_expression(), @"path\person_search_duty_locations.tab:126", @"PersonSearchCriteria.Add_new_employment_criterion_to_expression()");
            Do(() =>    PersonSearchCriteria.With__duty_assignments(Var["assignment"]), @"path\person_search_duty_locations.tab:127", @"PersonSearchCriteria.With__duty_assignments(Var[""assignment""])");
            Do(() =>    PersonSearchCriteria.With_duty_locations__(Var["location"]), @"path\person_search_duty_locations.tab:128", @"PersonSearchCriteria.With_duty_locations__(Var[""location""])");
            Do(() =>    PersonSearchCriteria.With_duty_assignment_statuses(Var["status"]), @"path\person_search_duty_locations.tab:129", @"PersonSearchCriteria.With_duty_assignment_statuses(Var[""status""])");
            Do(() =>    PersonSearchCriteria.With_duty_assignment_dates_before__(Var["before"].To<DateTime>()), @"path\person_search_duty_locations.tab:130", @"PersonSearchCriteria.With_duty_assignment_dates_before__(Var[""before""].To<DateTime>())");
            Do(() =>    PersonSearchCriteria.With_duty_assignment_dates_after__(Var["after"].To<DateTime>()), @"path\person_search_duty_locations.tab:131", @"PersonSearchCriteria.With_duty_assignment_dates_after__(Var[""after""].To<DateTime>())");
            Do(() =>    PersonSearchCriteria.With_duty_assignment_dates_between__and__(Var["between"].To<DateTime>(), Var["and"].To<DateTime>()), @"path\person_search_duty_locations.tab:132", @"PersonSearchCriteria.With_duty_assignment_dates_between__and__(Var[""between""].To<DateTime>(), Var[""and""].To<DateTime>())");
            Do(() =>    PersonSearchCriteria.With_undated_assignments(Var["undated"]), @"path\person_search_duty_locations.tab:133", @"PersonSearchCriteria.With_undated_assignments(Var[""undated""])");
            Do(() =>    PersonSearchCriteria.With_employment_criteria_effective_on_a_specific_date__(Var["effectivedate"].To<DateTime>()), @"path\person_search_duty_locations.tab:134", @"PersonSearchCriteria.With_employment_criteria_effective_on_a_specific_date__(Var[""effectivedate""].To<DateTime>())");
            Do(() =>    PersonSearchCriteria.With_employment_effective_date(Var["effectivedate"].To<DateTime>()), @"path\person_search_duty_locations.tab:135", @"PersonSearchCriteria.With_employment_effective_date(Var[""effectivedate""].To<DateTime>())");
            Do(() =>    PersonSearchCriteria.With_employment_types($"Tabula {Var["EmpType"]}"), @"path\person_search_duty_locations.tab:136", @"PersonSearchCriteria.With_employment_types($""Tabula {Var[""EmpType""]}"")");
            Do(() =>    PersonSearchCriteria.With_organizations(Var["organization"]), @"path\person_search_duty_locations.tab:137", @"PersonSearchCriteria.With_organizations(Var[""organization""])");
            Do(() =>    PersonSearchCriteria.Click_done_in_employment_criteria_popover(), @"path\person_search_duty_locations.tab:138", @"PersonSearchCriteria.Click_done_in_employment_criteria_popover()");
            Do(() =>    PersonSearchCriteria.Click_Search(), @"path\person_search_duty_locations.tab:139", @"PersonSearchCriteria.Click_Search()");
            Do(() =>    PersonSearchCriteria.Verify_that_page_navigated_to_search_results(), @"path\person_search_duty_locations.tab:140", @"PersonSearchCriteria.Verify_that_page_navigated_to_search_results()");
            Do(() =>    PersonSearch.Search_with_criteria(), @"path\person_search_duty_locations.tab:141", @"PersonSearch.Search_with_criteria()");
            Do(() =>    PersonSearch.Verify_that_there_are__results(Var["num"].To<Int32>()), @"path\person_search_duty_locations.tab:142", @"PersonSearch.Verify_that_there_are__results(Var[""num""].To<Int32>())");
            var arg_143_0 = new List<string> { "Bob" };
            Do(() =>    PersonSearch.Verify_that_results_are__(arg_143_0), @"path\person_search_duty_locations.tab:143", @"PersonSearch.Verify_that_results_are__(arg_143_0)");
        }

        public Table table__146_to_149()
        {
            return new Table {
                Label = "Search Assignment regular/temporary, location, and org",
                Header = new List<string>     { "Assignment", "Location", "Organization", "Num", "Found" },
                Data = new List<List<string>> {
                    new List<string>          { "regular", "#hpd", "", "1", "#lina" },
                    new List<string>          { "regular temporary", "#hpd", "", "2", "Collection" },
                    new List<string>          { "regular temporary", "", "#hpd", "1", "#lina" },
                }
            };
        }

        public Table table__152_to_156()
        {
            return new Table {
                Label = "Assignment status, before, and after",
                Header = new List<string>     { "Location", "Status", "Before", "After", "Num", "Found" },
                Data = new List<List<string>> {
                    new List<string>          { "#hpd", "", "", "", "2", "Collection" },
                    new List<string>          { "#hpd", "Past", "", "", "1", "#sterky" },
                    new List<string>          { "#hpd", "", "9/1/2008", "", "1", "#lina" },
                    new List<string>          { "#hpd", "", "", "3/1/2013", "2", "Collection" },
                }
            };
        }

        public Table table__159_to_165()
        {
            return new Table {
                Label = "Assignment date range, location and org",
                Header = new List<string>     { "Between", "And", "Location", "Organization", "Num", "Found" },
                Data = new List<List<string>> {
                    new List<string>          { "9/01/2009", "10/01/2010", "#hpd", "", "1", "#lina" },
                    new List<string>          { "8/18/2012", "03/13/2013", "#hpd", "", "2", "Collection" },
                    new List<string>          { "5/30/2012", "05/30/2013", "#hpd", "", "2", "Collection" },
                    new List<string>          { "6/01/2013", "07/01/2013", "#hpd", "", "1", "#lina" },
                    new List<string>          { "6/01/2008", "08/14/2008", "#hpd", "", "0", "" },
                    new List<string>          { "8/08/2012", "03/13/2013", "", "#hpd", "1", "#lina" },
                }
            };
        }

        public Table table__168_to_171()
        {
            return new Table {
                Label = "Assignment date range, location, and undated",
                Header = new List<string>     { "Between", "And", "Location", "Undated", "Num", "Found" },
                Data = new List<List<string>> {
                    new List<string>          { "1/01/2013", "03/14/2013", "#oa", "Excluded", "1", "#mimi" },
                    new List<string>          { "1/01/2013", "03/14/2013", "#oa", "Only", "1", "#sterky" },
                    new List<string>          { "8/01/2008", "05/15/2013", "Collection", "", "3", "Collection" },
                }
            };
        }

        public Table table__174_to_176()
        {
            return new Table {
                Label = "Assignment date range, location/org, and employment type",
                Header = new List<string>     { "Between", "And", "Location", "Organization", "EmpType", "Num", "Found" },
                Data = new List<List<string>> {
                    new List<string>          { "1/01/2013", "03/14/2013", "", "", "Reserve", "2", "Collection" },
                    new List<string>          { "1/01/2013", "03/14/2013", "Collection", "Collection", "", "2", "Collection" },
                }
            };
        }

        public person_search_duty_locations_generated()
            : base()
        {
        }
    }
}
