Plans and notes


===  Developer mode output

Not Found and Not Implemented steps:
    17:  create new badge named "Bad Monkey Fighter"
    44:  retire badge "Bad Monkey Fighter"

Story not tied to steps:
    8:  * Controlled by content admin permission
Steps not tied to story:
    188...220:  "Cannot create badge when lacking permission"

Please enjoy this chewy stack trace:


=====================================================================
===  Demo mode output

---------------------------------------------------------------------
Scenario:  "Badge management, discounts, and capabilities" (Badge_basics.tab)
PASS:      148 story steps, 218 setup, 18 uncategorized
Run on:    Friday, 30 Dec 2016  10:48:35

---------------------------------------------------------------------
Stories:

[V] AC-XXXXX  "As a major dude, I want to create badges on the fly"
    [focus this story]
    * Admin setting "Create Badge"
    * Controlled by content admin permission
    * Page listing badges, linked from menu X
    * Blah blah blah

    * Happy path
        ** Log in as Major Dude
        ** Enable Create Badge in Admin settings
        ** See Badge List in menu X
        ** Choose Add Badge from Badge List page
        ** Enter Badge info and save
        ** See new badge in Badge List page

    * Exception path:  Create Badge not enabled
        ** Disable Create Badge in Admin settings
        ** From Badge list page, see that Add Badge is not visible

    * Exception path:  User not a content admin
        ** Enable Create Badge in Admin settings
        ** From Badge list page, see that Add Badge is visible
        ** Log in as Sergeant Bradshaw
        ** From Badge list page, see that Add Badge is not visible

[>] AC-YYYYY  "As a badge holder, I want to see a discount"


---------------------------------------------------------------------
Steps

[Show Setup]

...lots of steps here, with no line numbers or timings...

===========

SeleniumPageIDTests.cs has reflective nuggets
P6 to read .NET assembly manifest?


---------------------------------------------------------------------

Facility Add Edit Workflow: "Add a facility"
# Login as "system"
# Browse to page
# Select owner "Testopia Academy"
# Enter text "Training Building" for "Resource Name"
# Check "Active"
# Enter text "TB-100" for "Identifying Number"
# Enter text "21" for "Asset Number"
# Enter text "Renovated 2013" for "Comments"
# Enter text "Building for basic training" for "Description"
# Enter text "01/01/2000" for "Purchase Date"
# Enter text "1000000" for "Purchase Price"
# Click button "Save"


"Add a facility":
>use: Facility Add Edit Workflow
Login as "system"
Browse to page
Select owner "Testopia Academy"
Check "Active"

=== Enter text in controls ===
[ Resource Name     | Identifying Number | Asset Number | Comments       | Description | Purchase Date | Purchase Price ]
| Training Building | TB-100             | 21           | Renovated 2013 | Buildin     | 01/01/2000    | 1000000        |

Click button "Save"


---------------------------------------------------------------------


ExportWorkflowHelper.cs

--- K:\code\acadis_trunk\ScenarioTests\ScenarioContext\

MVBaseExportHandlerWorkflow<THandler> : Workflow
MVBaseControlWorkflow<TView> : MVBaseWorkflow<TView>
MvcBaseWorkflow<TModel> : MVBaseWorkflow
partial class MVBaseWorkflow // ViewImplementations\MVBaseWorkflowProperties.cs
MVBaseWorkflow<TView> : MVBaseWorkflow
MVBaseWorkflow : Workflow
Workflow : ISetupAndTeardown, IScenarioMetadata


---------------------------------------------------------------------

Recurring technique:  When facing a mass of data of unknown variability
Create a processing loop which reports clearly on elements which are
 not in the expected form, somehow.
Have it loose enough to wedge in more adjustment rules/code.
This can aid quick iteration towards success with all data in the set.

Note that coding to fix all the cases which do come up is often easier
than coding to handle the general case.
  However, it's often fragile to new odd input, so it's better suited to
single-shot translation code than code which will keep getting new input.

---------------------------------------------------------------------

my SetHash $namespaces .= new;
my regex namespace   { ^ \s* namespace \s+ ([\w || '.']+) }


if $line ~~ / <namespace> / {
    $namespaces{~$<namespace>[0]} = True;
}

say "Namespaces: $namespaces";

--------------------------
There are plenty of namespaces, but no collisions, so I can skip
all that complexity.  GLEE.


---------------------------------------------------------------------

for $!possibly-useless.keys -> $puc { say ($puc.parent.defined > 0 ?? "^^^ " !! "--- ") ~ $puc.class-name; }


---------------------------------------------------------------------
for %!classes.values -> $class { say "Base class $($class.class-name) has $($class.methods.elems) methods inheritable." if $class.is-parent }

IAcadisServiceClient
System
IAcadisSmtpClientFactory
IMutableUserContext
ITestopiaMonitor
IMessenger
Workflow
IObjectBuilder
TaskRunnerWorkflow
IDateTimeProvider
TraceListener
IUrlResolver
AcadisConfigurationManager
MVBaseWorkflow
IAcadisSmtpClient
IAcadisReadOnlyDBConnectionFactory
EmailSender
IDisposable
DocumentStorageProviderFactory
Exception
SetupWorkflow
CustomerViewWorkflowBase
BaseCertSearchCriteriaWorkflow

# and once I remove the precompilation, I also get
ISetupAndTeardown


---

'CollectionEquivalentConstraint', 'IFiltersView', 'IStudentListViewRowItem', 'FieldAttribute', 'Attribute', 'Is', 'MvcBaseWorkflow', 'HttpPostedFileBase', 'IAcadisUserDetailsEditorView'


---

load:
    K:\code\acadis_trunk\ScenarioTests\ScenarioContext
        \ViewImplementations\MVBaseWorkflowProperties.cs
        \ViewImplementations\MvcBaseWorkflow.cs
        \ViewImplementations\MVBaseWorkflow.cs
        \Implementations\Workflow.cs
        \ViewImplementations\Curriculum\ClassDescriptiveFieldsWorkflow.cs

Verify parentage
    parent of ClassDescriptive is MVBaseWorkflow
    parent of MVBaseWorkflow is Workflow
    parent of Workflow is undefined

Verify both partials

Can find from ClassDescriptive?
        Workflow: Verify_proctor_login_failed
        MVB: Debugger_break
        MVBProps: Click_button__


---
Unfound(     "Set today to \"1/1/2023\"",     "TuitionBilling_2.tab:5" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:25" );
Unfound(     "Enter text #fees for \"Fees\"",     "TuitionBilling_2.tab:42" );
Unfound(     "Click button \"Done\"",     "TuitionBilling_2.tab:43" );
Unfound(     "Verify text for \"Fees\" is #fees",     "TuitionBilling_2.tab:45" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:72" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:79" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:122" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:188" );
Unfound(     "? Verify label for \"Student Name\" is \"Doo, Dewbie\"",     "TuitionBilling_2.tab:292" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:327" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:352" );
Unfound(     "Browse to page",     "TuitionBilling_2.tab:405" );
