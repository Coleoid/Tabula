=====================================================================
===  Tabula walking skeleton, remaining work   ===  13 Jan 2017   ===

Testopia runner wired through Tabula
    [ ] Loads Tabula scenario classes dynamically
    .5
.5

Pragmatics and plumbing
    [ ] Finish translating TuitionBilling into Tabula
    .25
.25

Language
    [ ] Start paragraph with string and colon
        String becomes label for Paragraph
        Paragraphs get their own scope
    1.0
1.0


=====================================================================
===  Beyond the skeleton

Testopia runner wired through Tabula
    [ ] split local/MVC into separate axis from Testopia/Tabula
    [ ] Reporting via existing web-page mechanism
    1.0 - 2.0

Dev mode vs. Demo mode
    [ ] BDD styled >when: and >then:
        Raises questions of scope
        ...which run against the current usage of '>use:'
        ...perhaps alternate large-scope 'use' is '>install:'

Fixture-Binder
    [ ] Cache invalidated when fixtures .dll newer than fixtures.json
    [ ] Deserialize from fixtures.json


=====================================================================
===  Done

Testopia runner
    [x] Pathway for running Tabula scenarios
    1.0
    [x] Reports minimally/adequately
    .25

Compiler
    [x] Loads Binder from command-line args, uses it
    .25
    [x] Write class to output file
    .25
    [x] Prefix fixture type with namespace
    .25

Pragmatics and plumbing
    [x] 0.25  Update mechanical translation script to 16.12 Tabula
    [x] Manually add needed code to project for demo
        * Base classes
        * Generated scenario class(es?)
    .25

Fixture-Binder
    [x] serialize classes (json? .parent?) for compiler speed
    .5
    [x] Manually pre-build parent classes for inheritance
    .75
    [x] Keep Parent in Fixture-Class, populate from declaration
        delegate method finding at scenario compile-time
    1.0
    [x] Comprehend generic classes (enough)
        (perhaps very little if inheritance/partials are already in)
    .5
    [x] Handle connecting parent classes
    .5
    [x] Mop up remaining oddballs
    .5
    [x] Note namespaces
    .25
